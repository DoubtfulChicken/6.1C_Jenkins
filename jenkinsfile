pipeline {
    agent any

    stages {
        stage('Build') {
            steps {
                echo 'Building the code...'
                sh 'mvn clean install'
            }
        }

        stage('Unit and Integration Tests') {
            steps {
                echo 'Running unit and integration tests...'
                sh 'mvn test'
            }
        }

        stage('Code Analysis') {
            steps {
                echo 'Running code analysis...'
                sh 'sonar-scanner'
            }
        }

        stage('Security Scan') {
            steps {
                echo 'Performing security scan...'
                sh 'dependency-check.sh --project 6.1C-Jenkinsfile'
            }
        }

        stage('Deploy to Staging') {
            steps {
                echo 'Deploying to Staging server...'
                sh 'scp target/myapp.jar user@staging-server:/path/to/deploy'
            }
        }

        stage('Integration Tests on Staging') {
            steps {
                echo 'Running integration tests on Staging...'
                sh './integration-tests.sh'
            }
        }

        stage('Deploy to Production') {
            steps {
                echo 'Deploying to Production server...'
                sh 'scp target/myapp.jar user@production-server:/path/to/deploy'
            }
        }
    }

    post {
        always {
            echo 'Sending email notifications...'
            emailext(
                to: 'developer@example.com',
                subject: 'Jenkins Pipeline - Build Status',
                body: "Build completed with status: ${currentBuild.currentResult}. Check the attached logs.",
                attachLog: true
            )
        }
    }
}

        